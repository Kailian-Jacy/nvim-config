{
	"Toc": {
		"prefix": "toc",
		"body": [
			"```table-of-contents",
			"title: ${0:Table of Contents}",
			"```"
		]
	},
	"Todos": {
		"prefix": "todo",
		"body": [
			"- [ ] "
		]
	},
	"LazyVimKeymap": {
		"prefix": "pluginkeymap",
		"body": [
			"{",
			"\t\"<keymap>\",",
			"\t\"functionality\",",
			"\tmode = \"n\",",
			"\tdesc = \"n\",",
			"},"
		],
		"desc": "Create new keymap in lazyvim plugin."
	},
	"CreateNewSnippet": {
		"prefix": "newsnippet",
		"body": [
			"\"${1:SnippetName}\": {",
			"\t\"prefix\": \"${2:snip_prefix}\",",
			"\t\"body\": [",
			"\t\t\"${3:Snippet content here}\"",
			"\t]",
			"}"
		],
		"desc": "Create a new code snippet with a specified name, prefix, and content."
	},
	"VimPrintInspect": {
		"prefix": "printinspect",
		"body": [
			"vim.print(vim.inspect($0))"
		]
	},
	"VimAddLog": {
		"prefix": "vimlog",
		"body": [
			"vim.notify(\"$1\", vim.log.levels.$2)"
		]
	},
	"LuaKeymapSnippet": {
		"prefix": "vimkeymap",
		"body": [
			"vim.keymap.set({\"${1:n}\"}, \"${2:<leader>tp}\", function()",
			"\t${3:vim.notify(\"Keymap Triggered\", vim.log.levels.INFO)}",
			"end, { desc = \"${4:Description}\" })"
		],
		"description": "Create a Neovim keymap using vim.keymap.set"
	},
	"debug.launch_json.rust": {
		"prefix": "rustlaunchjsonconfig",
		"body": [
			"{",
			"  \"type\": \"codelldb\",",
			"  \"request\": \"launch\",",
			"  \"name\": \"Debug Rust Program\",",
			"  \"program\": \"\\${workspaceFolder}/target/debug/\\${workspaceFolderBasename}\",",
			"  \"args\": [],",
			"  \"cwd\": \"\\${workspaceFolder}\",",
			"  \"sourceMap\": {",
			"    \"/rustc/<toolchain-hash>/\": \"\\${env:HOME}/.rustup/toolchains/<toolchain>/lib/rustlib/src/rust/\"",
			"  },",
			"  \"preLaunchTask\": \"cargo build\"",
			"}"
		],
		"description": "example config.json config for Rust programs."
	}
}
